import { useEffect, useRef, useState } from 'react';
import { Star, Quote, ChevronLeft, ChevronRight } from 'lucide-react';
import { Button } from '@/components/ui/button';

const Reviews = () => {
  const [isVisible, setIsVisible] = useState(false);
  const [currentReview, setCurrentReview] = useState(0);
  const sectionRef = useRef<HTMLElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.3 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  const reviews = [
    {
      name: '–ê–Ω–¥—Ä–µ–π –ü–µ—Ç—Ä–æ–≤',
      company: '–û–û–û "–°—Ç—Ä–æ–π–¢–µ—Ö"',
      rating: 5,
      text: '–û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–µ—Å–∫–∞, –¥–æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ—á–Ω–æ –≤ —Å—Ä–æ–∫. –í–æ–¥–∏—Ç–µ–ª—å –ø–æ–º–æ–≥ —Å —Ä–∞–∑–≥—Ä—É–∑–∫–æ–π –≤ —É–¥–æ–±–Ω–æ–º –º–µ—Å—Ç–µ. –¶–µ–Ω—ã —Ä–µ–∞–ª—å–Ω–æ –Ω–∏–∂–µ, —á–µ–º —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞—Ç–∏–º—Å—è –µ—â—ë!',
      project: '–§—É–Ω–¥–∞–º–µ–Ω—Ç —á–∞—Å—Ç–Ω–æ–≥–æ –¥–æ–º–∞'
    },
    {
      name: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
      company: '–ò–ü –°–º–∏—Ä–Ω–æ–≤–∞',
      rating: 5,
      text: '–ó–∞–∫–∞–∑—ã–≤–∞–ª–∏ —â–µ–±–µ–Ω—å –¥–ª—è –¥–æ—Ä–æ–∂–∫–∏ –Ω–∞ –¥–∞—á–µ. –ú–µ–Ω–µ–¥–∂–µ—Ä –≤—Å—ë –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏–ª, –ø–æ–º–æ–≥ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –ú–∞—Ç–µ—Ä–∏–∞–ª –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–∞—è.',
      project: '–°–∞–¥–æ–≤—ã–µ –¥–æ—Ä–æ–∂–∫–∏'
    },
    {
      name: '–ú–∏—Ö–∞–∏–ª –ö–æ–∑–ª–æ–≤',
      company: '–°–ö "–ú–æ–Ω–æ–ª–∏—Ç"',
      rating: 5,
      text: '–†–∞–±–æ—Ç–∞–µ–º —Å –°–ø–µ—Ü—Ç–µ—Ö-22 —É–∂–µ –ø–æ–ª–≥–æ–¥–∞. –í—Å–µ–≥–¥–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–¥–µ—Ä–∂–µ–∫ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π. –û—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è, —á—Ç–æ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –¥–∞–∂–µ –Ω–æ—á—å—é.',
      project: '–ú–Ω–æ–≥–æ—ç—Ç–∞–∂–Ω–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ'
    }
  ];

  const nextReview = () => {
    setCurrentReview((prev) => (prev + 1) % reviews.length);
  };

  const prevReview = () => {
    setCurrentReview((prev) => (prev - 1 + reviews.length) % reviews.length);
  };

  useEffect(() => {
    const interval = setInterval(nextReview, 5000); // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    return () => clearInterval(interval);
  });

  return (
    <section
      id="reviews"
      ref={sectionRef}
      className="py-20 sand-texture relative"
    >
      <div className="container mx-auto px-4">
        <div
          className={`text-center mb-16 transition-all duration-1000 ${
            isVisible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"
          }`}
        >
          <h2 className="text-3xl md:text-4xl font-heading font-bold text-accent mb-6">
            –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            –ë–æ–ª–µ–µ 500 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–æ–≤–µ—Ä—è—é—Ç –Ω–∞–º –ø–æ—Å—Ç–∞–≤–∫—É —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö
            –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
          </p>
        </div>

        <div
          className={`max-w-4xl mx-auto transition-all duration-1000 ${
            isVisible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"
          }`}
          style={{ transitionDelay: "300ms" }}
        >
          <div className="relative">
            {/* –°–ª–∞–π–¥–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ */}
            <div className="bg-card rounded-lg shadow-card p-8 md:p-12 relative overflow-hidden">
              <div className="absolute top-6 left-6">
                <Quote className="w-12 h-12 text-primary/20" />
              </div>

              <div className="relative z-10">
                <div className="flex items-center mb-4">
                  {[...Array(5)].map((_, i) => (
                    <Star
                      key={i}
                      className={`w-5 h-5 ${
                        i < reviews[currentReview].rating
                          ? "text-yellow-400 fill-current"
                          : "text-gray-300"
                      }`}
                    />
                  ))}
                </div>

                <blockquote className="text-lg md:text-xl text-foreground leading-relaxed mb-6">
                  "{reviews[currentReview].text}"
                </blockquote>

                <div className="flex items-center justify-between">
                  <div>
                    <cite className="text-lg font-heading font-bold text-accent not-italic">
                      {reviews[currentReview].name}
                    </cite>
                    <p className="text-sm text-muted-foreground">
                      {reviews[currentReview].company}
                    </p>
                    <p className="text-sm text-primary font-medium">
                      –ü—Ä–æ–µ–∫—Ç: {reviews[currentReview].project}
                    </p>
                  </div>

                  <div className="flex space-x-2">
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={prevReview}
                      className="rounded-full w-10 h-10 p-0"
                    >
                      <ChevronLeft className="w-4 h-4" />
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={nextReview}
                      className="rounded-full w-10 h-10 p-0"
                    >
                      <ChevronRight className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              </div>
            </div>

            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            <div className="flex justify-center mt-6 space-x-2">
              {reviews.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentReview(index)}
                  className={`w-3 h-3 rounded-full transition-all duration-300 ${
                    currentReview === index
                      ? "bg-primary scale-125"
                      : "bg-primary/30 hover:bg-primary/50"
                  }`}
                />
              ))}
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–Ω–∏–∑—É */}
        <div
          className={`mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 transition-all duration-1000 ${
            isVisible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"
          }`}
          style={{ transitionDelay: "600ms" }}
        >
          {[
            { number: "500+", label: "–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", icon: "üë•" },
            { number: "4.9", label: "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞", icon: "‚≠ê" },
            { number: "98%", label: "–ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤", icon: "üîÑ" },
            {
              number: "—Å 8:00 –¥–æ 20:00",
              label: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤",
              icon: "üìû",
            },
          ].map((stat, index) => (
            <div key={index} className="text-center bg-card/50 rounded-lg p-4">
              <div className="text-2xl mb-2">{stat.icon}</div>
              <div className="text-2xl md:text-3xl font-heading font-bold text-primary mb-1">
                {stat.number}
              </div>
              <div className="text-sm text-muted-foreground">{stat.label}</div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Reviews;